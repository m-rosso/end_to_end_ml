###################################################################################################
Docker basic commands:

# Checking available images:
docker images

# Delete images:
docker rmi <image_id>

# Checking running containers:
docker ps

# Checking available containers:
docker ps -a

# Logs from a running container:
docker logs <container_name or container_id>

# Creating Docker image and registering it into DockerHub:
docker login
docker build -t mrossods/deploy_studies .
docker push mrossods/deploy_studies:latest

# Importing a Docker image from a repository:
docker pull mrossods/deploy_studies:latest
	# Note: if the DockerHub repository is private, then <docker login> command should be run and
	credentials of the associated account must be passed.
	# Note: given a Docker image, no additional artifacts or source codes need to be provided.

###################################################################################################
Alternative 1:

# Dockerfile main commands:
EXPOSE 8000
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

# Creating Docker image:
docker build -t ml_app:v0 .

# Creating and running Docker container:
docker run --name ml_app_container -p 8000:8000 ml_app:v0
docker run -d --name ml_app_container -p 8000:8000 ml_app:v0

###################################################################################################
Alternative 2:

# Dockerfile main commands:
EXPOSE 8000
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--reload"]

# Creating Docker image:
docker build -t ml_app:v1 .

# Creating and running Docker container:
docker run --name ml_app_container -p 8000:8000 ml_app:v1

###################################################################################################
Alternative 3:

# End of main.py:
if __name__ == '__main__':
    port = int(os.environ.get('PORT', 5000))
    uvicorn.run(app, host='0.0.0.0', port=port)

# Dockerfile main commands:
(Without EXPOSE command)
CMD ["python", "main.py"]

# Creating Docker image:
docker build -t ml_app:v2 .

# Creating and running Docker container:
docker run -d --name ml_app_container -p 5000:5000 ml_app:v2
